{"ast":null,"code":"var _jsxFileName = \"/home/dev/todo-React-app/src/components/Todo/Todo.js\";\nimport React, { Component } from 'react';\nimport uuid from \"uuid\";\nimport './Todo.scss';\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addTask = () => {\n      const Items = {\n        id: uuid.v4(),\n        value: this.input.current.value,\n        Date: new Date().toUTCString()\n      };\n\n      if (localStorage.getItem('list') == null) {\n        const list = [];\n        list.push(Items);\n        localStorage.setItem(\"list\", JSON.stringify(list));\n      } else {\n        const list = JSON.parse(localStorage.getItem('list'));\n        list.push(Items);\n        localStorage.setItem(\"list\", JSON.stringify(list));\n      }\n\n      this.setState({\n        list: JSON.parse(localStorage.getItem('list'))\n      });\n    };\n\n    this.deleteItem = event => {\n      let index = event.target.getAttribute('data-key');\n      let listValue = JSON.parse(localStorage.getItem('list'));\n      listValue.splice(index, 1);\n      this.setState({\n        list: listValue\n      });\n      localStorage.setItem('list', JSON.stringify(listValue));\n    };\n\n    this.editItem = event => {\n      let index = event.target.getAttribute('data-key');\n      let listValue = JSON.parse(localStorage.getItem('list'));\n      listValue.splice(index, 1);\n      this.setState({\n        list: listValue\n      });\n      localStorage.setItem('list', JSON.stringify(listValue));\n    };\n\n    this.input = React.createRef();\n    this.state = {\n      list: []\n    };\n  }\n\n  componentDidMount() {\n    const list = window.localStorage.getItem('list');\n    const parsedList = JSON.parse(list);\n\n    if (list == null) {\n      return false;\n    } else {\n      this.setState({\n        list: parsedList\n      });\n      console.log(this.state.list);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-todo-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"Todo-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"Todo Tasks...\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todo-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Add Your Task...\",\n      ref: this.input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.addTask,\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, this.state.list.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"task\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 53\n        }\n      }, item.value)), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"button\",\n        type: \"button\",\n        value: \"delete\",\n        \"data-key\": index,\n        onClick: this.deleteItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 49\n        }\n      }, \"Delete\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        onClick: this.editItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 49\n        }\n      })); // return(\n      // <li key={item.id}>\n      //     <input type=\"checkbox\"></input>\n      //     <p className=\"task\">{item.value}</p>\n      //     <button className=\"button\" type=\"button\" value=\"delete\" data-key={index} onClick={this.deleteItem}>Delete</button>\n      //     <input type=\"text\" onClick={this.editItem}></input>\n      // </li>)\n    }))));\n  }\n\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/dev/todo-React-app/src/components/Todo/Todo.js"],"names":["React","Component","uuid","Todo","constructor","props","addTask","Items","id","v4","value","input","current","Date","toUTCString","localStorage","getItem","list","push","setItem","JSON","stringify","parse","setState","deleteItem","event","index","target","getAttribute","listValue","splice","editItem","createRef","state","componentDidMount","window","parsedList","console","log","render","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport uuid from \"uuid\";\nimport  './Todo.scss'\n\n\nclass Todo extends Component {\n\n    constructor(props) {\n        super(props)\n    \n       this.input=React.createRef()\n       this.state={\n           list:[],\n          }\n    }\n\n    addTask=()=>{\n    \n    const Items={\n            id:uuid.v4(),\n            value:this.input.current.value,\n            Date: new Date().toUTCString()\n        };\n\n        if(localStorage.getItem('list')==null){\n            const list=[]\n            list.push(Items);\n            localStorage.setItem(\"list\",JSON.stringify(list))\n        }\n        else{\n            const list=JSON.parse(localStorage.getItem('list'))\n            list.push(Items)\n            localStorage.setItem(\"list\",JSON.stringify(list))\n        }\n        this.setState({\n            list:JSON.parse(localStorage.getItem('list'))\n        });\n    }\n\n    componentDidMount() {\n        const list = window.localStorage.getItem('list');\n        const parsedList = JSON.parse(list);\n        if(list == null){\n            return false\n        }\n        else{\n            this.setState({\n                list: parsedList,\n            })\n            console.log(this.state.list);\n        }\n    }\n    \n    deleteItem=(event)=> {\n        \n        let index = event.target.getAttribute('data-key')\n        let listValue=JSON.parse(localStorage.getItem('list'));\n        listValue.splice(index,1)\n        this.setState({list:listValue});\n        localStorage.setItem('list',JSON.stringify(listValue))\n    }\n    editItem=(event)=> {\n        \n        let index = event.target.getAttribute('data-key')\n        let listValue=JSON.parse(localStorage.getItem('list'));\n        listValue.splice(index,1)\n        this.setState({list:listValue});\n        localStorage.setItem('list',JSON.stringify(listValue))\n    }\n    render() {\n        return (\n            <div className=\"main-todo-container\">\n                <h1 className=\"Todo-header\">Todo Tasks...</h1>\n                <hr/>\n                <div className=\"todo-container\">\n                    <input type=\"text\" placeholder=\"Add Your Task...\" ref={this.input}></input>\n                        <button onClick={this.addTask} className=\"button\" >Add</button>\n                            <ol>\n                                {\n                                    this.state.list.map((item,index)=>\n                                    {\n                                        return(\n                                            <li key={item.id}>\n                                                <div className=\"\">\n                                                    <input type=\"checkbox\"></input>\n                                                    <p className=\"task\">{item.value}</p>\n                                                </div>\n                                                <button className=\"button\" type=\"button\" value=\"delete\" data-key={index} onClick={this.deleteItem}>Delete</button>\n                                                <input type=\"text\" onClick={this.editItem}></input>\n                                            </li>)\n                                        // return(\n                                        // <li key={item.id}>\n                                        //     <input type=\"checkbox\"></input>\n                                        //     <p className=\"task\">{item.value}</p>\n                                        //     <button className=\"button\" type=\"button\" value=\"delete\" data-key={index} onClick={this.deleteItem}>Delete</button>\n                                        //     <input type=\"text\" onClick={this.editItem}></input>\n                                        // </li>)\n                                    })\n                                } \n                            </ol>\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Todo\n"]},"metadata":{},"sourceType":"module"}